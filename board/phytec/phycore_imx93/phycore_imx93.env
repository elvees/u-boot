/* SPDX-License-Identifier: (GPL-2.0+ OR MIT) */

image=Image
console=ttyLP0
fdt_addr=0x83000000
fdto_addr=0x830c0000
bootenv_addr=0x83500000
fdt_file=CONFIG_DEFAULT_FDT_FILE
ip_dyn=yes
bootenv=bootenv.txt
mmc_load_bootenv=fatload mmc ${mmcdev}:${mmcpart} ${bootenv_addr} ${bootenv}
mmcdev=CONFIG_SYS_MMC_ENV_DEV
mmcpart=1
mmcroot=2
mmcautodetect=yes
mmcargs=setenv bootargs console=${console},${baudrate} earlycon
	root=/dev/mmcblk${mmcdev}p${mmcroot} ${raucargs} rootwait rw
loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}
loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
mmc_load_overlay=fatload mmc ${mmcdev}:${mmcpart} ${fdto_addr} ${overlay}
mmc_apply_overlays=
	fdt address ${fdt_addr};
	for overlay in ${overlays};
	do;
		if run mmc_load_overlay; then
			fdt resize ${filesize};
			fdt apply ${fdto_addr};
		fi;
	done;
mmcboot=
	echo Booting from mmc ...;
	if run mmc_load_bootenv; then
		env import -t ${bootenv_addr} ${filesize};
	fi;
	run mmcargs;
	if run loadfdt; then
		run mmc_apply_overlays;
		booti ${loadaddr} - ${fdt_addr};
	else
		echo WARN: Cannot load the DT;
	fi;
nfsroot=/nfs
netargs=setenv bootargs console=${console},${baudrate} earlycon
	root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp
net_load_bootenv=${get_cmd} ${bootenv_addr} ${bootenv}
net_load_overlay=${get_cmd} ${fdto_addr} ${overlay}
net_apply_overlays=
	fdt address ${fdt_addr};
	for overlay in ${overlays};
	do;
		if run net_load_overlay; then
			fdt resize ${filesize};
			fdt apply ${fdto_addr};
		fi;
	done;
netboot=
	echo Booting from net ...;
	run netargs;
	if test ${ip_dyn} = yes; then
		setenv get_cmd dhcp;
	else
		setenv get_cmd tftp;
	fi;
	if run net_load_bootenv; then
		env import -t ${bootenv_addr} ${filesize};
	fi;
	${get_cmd} ${loadaddr} ${image};
	if ${get_cmd} ${fdt_addr} ${fdt_file}; then
		run net_apply_overlays;
		booti ${loadaddr} - ${fdt_addr};
	else
		echo WARN: Cannot load the DT;
	fi;
